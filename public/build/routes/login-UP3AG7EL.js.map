{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx", "../../../app/components/landing.tsx", "../../../app/components/auth/login-options.tsx", "../../../app/components/auth/nos2x-login.tsx", "../../../app/components/auth/alby-login.tsx"],
  "sourcesContent": ["import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { useState } from \"react\";\r\nimport type { HexKey } from \"~/services/nostr/types\";\r\nimport type { LoginForm } from \"~/services/session.server\";\r\nimport { createUserSession, getUser, login } from \"~/services/session.server\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport { Landing } from \"~/components/landing\";\r\nimport LoginOptions from \"~/components/auth/login-options\";\r\n\r\nexport const loader = (async ({ request }) => {\r\n  const isUserLogin = await getUser(request);\r\n\r\n  if (isUserLogin) {\r\n    return redirect(\"/feed\");\r\n  }\r\n\r\n  return null;\r\n}) satisfies LoaderFunction;\r\n\r\nexport const action = (async ({ request }) => {\r\n  const body = await request.formData();\r\n  const pubkey = body.get(\"pubkey\") as HexKey;\r\n  const loginData: LoginForm = {\r\n    pubkey,\r\n    inputs: {},\r\n  };\r\n\r\n  const user = await login(loginData);\r\n\r\n  if (!user) {\r\n    redirect(\"/\");\r\n  }\r\n\r\n  return createUserSession({\r\n    remember: true,\r\n    request,\r\n    userId: user!.id,\r\n    redirectTo: \"/feed\",\r\n  });\r\n}) satisfies ActionFunction;\r\n\r\nexport default function (): JSX.Element {\r\n  const [progress, setProgress] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoadingBar\r\n        color=\"#00AFAF\"\r\n        height={6}\r\n        progress={progress}\r\n        onLoaderFinished={() => setProgress(0)}\r\n      />\r\n      <Landing setShowModal={setShowModal} />\r\n      {showModal && (\r\n        <LoginOptions onClose={handleCloseModal} setProgress={setProgress} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport { Button } from \"./common/button\";\r\nimport gems from \"public/assets/images/logo/gem.png\";\r\nimport gem from \"public/assets/images/onboardinglogo.png\";\r\n\r\nexport function Landing({\r\n  setShowModal,\r\n}: {\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  setShowModal: Function;\r\n}): JSX.Element {\r\n  return (\r\n    <div>\r\n      <div className=\"bg h-[90px]\">\r\n        <div className=\"flex w-full\">\r\n          <div className=\"login h-[790px] w-1/2\">\r\n            <div className=\" mt-[120px] flex items-center justify-center\">\r\n              <img src={gem} alt=\"\" className=\"w-1/2\" />\r\n            </div>\r\n            <div className=\"mt-8 flex justify-center\">\r\n              <div className=\" w-1/2 items-center text-center text-xl text-c-lightgray \">\r\n                <p className=\" font-Bebas\">\r\n                  GEMS IS A DECENTRALIZED, OPEN SOURCE SOCIAL PLATFORM.{\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"w-1/2 overflow-y-auto bg-gray-700\">\r\n            <div className=\"\">\r\n              <div className=\" mt-[150px] flex items-center justify-center\">\r\n                <img src={gems} alt=\"\" className=\"w-20\" />\r\n              </div>\r\n              <div className=\"mt-5 flex flex-col items-center justify-center\">\r\n                <div className=\"h-[1px] w-[300px] bg-white\"></div>\r\n                <div className=\"mt-1 h-[1px] w-[300px] bg-white\"></div>\r\n              </div>\r\n              <div className=\"mt-2 flex justify-center\">\r\n                <h1 className=\"font-Bebas text-6xl text-gray-300\">\r\n                  WELCOME TO{\" \"}\r\n                  <span className=\"bg-gradient-to-r from-cyan-800 to-cyan-500 bg-clip-text text-transparent\">\r\n                    GEMS\r\n                  </span>\r\n                </h1>\r\n              </div>\r\n              <div className=\"mt-20 flex flex-col justify-center\">\r\n                <div className=\"flex justify-center \">\r\n                  <Button\r\n                    size={\"medium\"}\r\n                    color={\"white\"}\r\n                    className=\"mt-2 w-[400px] font-Bebas text-2xl \"\r\n                    onClick={() => setShowModal(true)}\r\n                  >\r\n                    LOGIN WITH NOSTR KEYCHAIN\r\n                  </Button>\r\n                </div>\r\n                <div className=\"flex justify-center \">\r\n                  <Link to=\"/how-to-get-nos2x\">\r\n                    <Button\r\n                      size={\"medium\"}\r\n                      color={\"cyan\"}\r\n                      className=\"mt-2 w-[400px] font-Bebas text-2xl \"\r\n                    >\r\n                      DONT HAVE A NOSTR KEYCHAIN? CLICK HERE\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\" mt-[150px] font-Bebas text-xl\">\r\n                <p className=\"flex items-center justify-center text-center text-c-lightgray\">\r\n                  LEARN MORE AT{\" \"}\r\n                  <span className=\"ml-1 text-c-cyan\"> GEMS.XYZ/FAQ</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* } */}\r\n    </div>\r\n  );\r\n}\r\n", "import { useEffect } from \"react\";\r\nimport Nos2xLogin from \"./nos2x-login\";\r\nimport { useNavigation } from \"@remix-run/react\";\r\nimport AlbyLogin from \"./alby-login\";\r\nimport { IconCircleX } from \"public/assets/icons\";\r\ntype LoginOptionsProps = {\r\n  setProgress: React.Dispatch<React.SetStateAction<number>>;\r\n  onClose: () => void; // New prop for handling close\r\n};\r\n\r\nexport default function LoginOptions({\r\n  setProgress,\r\n  onClose, // New prop\r\n}: LoginOptionsProps): JSX.Element {\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    navigation.state == \"idle\"\r\n      ? setProgress(0)\r\n      : navigation.state == \"submitting\"\r\n      ? setProgress(50)\r\n      : navigation.state == \"loading\"\r\n      ? setProgress(100)\r\n      : setProgress(0);\r\n  }, [navigation.state, setProgress]);\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 backdrop-blur-sm\">\r\n      <div className=\"h-[280px] w-[400px] rounded-lg bg-c-gray px-3 py-5 font-Roboto text-xl text-c-lightgray\">\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-c-lightgray hover:text-c-white focus:outline-none\"\r\n          >\r\n            <IconCircleX />\r\n          </button>\r\n        </div>\r\n        <div className=\"mt-5 flex flex-col items-center justify-center\">\r\n          <div className=\"flex items-center justify-center font-Bebas text-4xl\">\r\n            Choose keychain{\" \"}\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-5 flex items-center justify-center\">\r\n          <Nos2xLogin navigation={navigation} />\r\n        </div>\r\n        <div className=\"mt-3 flex items-center justify-center\">\r\n          <AlbyLogin navigation={navigation} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { IconNostr } from \"public/assets/icons\";\r\nimport { Button } from \"../common/button\";\r\nimport type { HexKey } from \"~/services/nostr/types\";\r\nimport { useSubmit } from \"@remix-run/react\";\r\nimport { useRef } from \"react\";\r\n\r\ndeclare const window: Window &\r\n  typeof globalThis & {\r\n    nostr: {\r\n      getPublicKey: () => Promise<HexKey>;\r\n    };\r\n  };\r\n\r\nexport default function Nos2xLogin({\r\n  navigation,\r\n}: {\r\n  navigation: { state: string };\r\n}): JSX.Element {\r\n  const submit = useSubmit();\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n\r\n  async function login(event: React.FormEvent<HTMLFormElement>) {\r\n    try {\r\n      event.preventDefault();\r\n\r\n      if (formRef.current === null) {\r\n        window.alert(\"An error occured trying to get your public key.\");\r\n      }\r\n\r\n      const pubkey = await window.nostr.getPublicKey();\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      const relays: string[] = [\r\n        \"wss://relay.damus.io\",\r\n        \"wss://relay.snort.social\",\r\n        \"wss://relay.gems.xyz\",\r\n      ];\r\n      const formData = new FormData(formRef.current!);\r\n      const ref = pubkey;\r\n      formData.set(\"pubkey\", ref);\r\n      submit(formData, { method: \"POST\" });\r\n    } catch (error) {\r\n      if (\r\n        error ==\r\n        \"TypeError: Cannot read properties of undefined (reading 'getPublicKey')\"\r\n      ) {\r\n        window.alert(\"No public key acquired. Install nos2x extension first.\");\r\n      } else {\r\n        window.alert(\"An error occured trying to get your public key.\");\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form ref={formRef} onSubmit={login} method=\"post\">\r\n        <Button\r\n          size=\"medium\"\r\n          type=\"submit\"\r\n          className=\"items-ceter mt-2 flex w-[350px] justify-center font-Bebas text-xl \"\r\n        >\r\n          <IconNostr />\r\n          <span className=\"ml-2\">\r\n            {navigation.state === \"submitting\" ? \"Authenticating...\" : \"NOS2X\"}\r\n          </span>\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n", "import { Button } from \"../common/button\";\r\nimport type { HexKey } from \"~/services/nostr/types\";\r\nimport { useSubmit } from \"@remix-run/react\";\r\nimport { useRef } from \"react\";\r\nimport alby from \"public/assets/images/sample/alby.png\";\r\n\r\ndeclare const window: Window &\r\n  typeof globalThis & {\r\n    nostr: {\r\n      getPublicKey: () => Promise<HexKey>;\r\n    };\r\n  };\r\n\r\nexport default function AlbyLogin({\r\n  navigation,\r\n}: {\r\n  navigation: { state: string };\r\n}): JSX.Element {\r\n  const submit = useSubmit();\r\n  const formRef = useRef<HTMLFormElement>(null);\r\n\r\n  async function login(event: React.FormEvent<HTMLFormElement>) {\r\n    try {\r\n      event.preventDefault();\r\n      if (formRef.current === null) {\r\n        window.alert(\"An error occured trying to get your public key.\");\r\n      }\r\n      const pubkey = await window.nostr.getPublicKey();\r\n     \r\n      const formData = new FormData(formRef.current!);\r\n      const ref = pubkey;\r\n      formData.set(\"pubkey\", ref);\r\n      submit(formData, { method: \"POST\" });\r\n    } catch (error) {\r\n      if (\r\n        error ==\r\n        \"TypeError: Cannot read properties of undefined (reading 'getPublicKey')\"\r\n      ) {\r\n        window.alert(\"No public key acquired. Install nos2x extension first.\");\r\n      } else {\r\n        window.alert(\"An error occured trying to get your public key.\");\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form ref={formRef} onSubmit={login} method=\"post\">\r\n        <Button\r\n          size=\"medium\"\r\n          type=\"submit\"\r\n          className=\"items-ceter mt-2 flex w-[350px] justify-center font-Bebas text-xl \"\r\n        >\r\n          <img src={alby} alt=\"\" className=\"mr-2 w-8\" />\r\n          <span className=\"ml-2\">\r\n            {navigation.state === \"submitting\" ? \"Authenticating...\" : \"ALBY\"}\r\n          </span>\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "import_jsx_dev_runtime", "login", "import_react", "import_jsx_dev_runtime", "login", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
