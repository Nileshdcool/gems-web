{
  "version": 3,
  "sources": ["../../../app/routes/p.$pubkey.tsx", "../../../app/components/feed/user-posts.tsx", "../../../app/components/user-details/user-details.tsx", "../../../app/components/banner.tsx", "../../../app/components/user-details/user-details-profile.tsx", "../../../app/components/user-details/user-details-follows.tsx"],
  "sourcesContent": ["import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { Link, useLoaderData } from \"@remix-run/react\";\r\nimport { Tabs } from \"~/components/common/tab\";\r\nimport Menu from \"~/components/layout/menu\";\r\nimport useProfileContacts from \"~/services/nostr/profiles/contacts\";\r\nimport { getUser } from \"~/services/session.server\";\r\nimport RightSideBar from \"~/components/feed/right-pane\";\r\nimport UserDetails from \"~/components/user-details/user-details\";\r\nimport { MainContainer, TabContainer } from \"~/components/layout/container\";\r\n\r\ninterface Props {\r\n  events: Event[];\r\n}\r\n\r\nexport const loader = (async ({ request, params }) => {\r\n  const user = await getUser(request);\r\n\r\n  if (!user) {\r\n    redirect(\"/login\");\r\n  }\r\n\r\n  return { user, params };\r\n}) satisfies LoaderFunction;\r\n\r\nexport default function ({ events }: Props): JSX.Element {\r\n  const { user } = useLoaderData();\r\n  const { latestContactEvent } = useProfileContacts(user.pubkey);\r\n  const authors =\r\n    latestContactEvent?.tags\r\n      ?.filter((tag) => tag[0] === \"p\")\r\n      .map((tag) => tag[1]) || [];\r\n\r\n  return (\r\n    <>\r\n      <Menu user={user}></Menu>\r\n      <MainContainer>\r\n        <TabContainer>\r\n          <Tabs defaultSelectedTab=\"posts\">\r\n            <div className=\"flex justify-between\">\r\n              <Link to=\"/feed\">\r\n                <div className=\"flex py-2 text-c-lightgray\">\r\n                  <h1 className=\"ml-3 font-bold text-c-cyan\">BACK TO FEED</h1>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <UserDetails />\r\n          </Tabs>\r\n        </TabContainer>\r\n        <RightSideBar authors={authors} />\r\n      </MainContainer>\r\n    </>\r\n  );\r\n}\r\n", "import * as React from \"react\";\r\n// import { useState } from \"react\";\r\n// import Quote from \"../modals/quote-relay\";\r\n// import SendinChat from \"../modals/send-in-chat\";\r\nimport { getUser } from \"~/services/session.server\";\r\nimport type { LoaderArgs } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useLoaderData, useLocation } from \"@remix-run/react\";\r\n//import mask, { avatar } from \"~/utils/pubkey\";\r\nimport { FeedLoader } from \"../loader\";\r\n// import { Post } from \"./post\";\r\n// import Relays from \"./relays\";\r\nimport type { Event } from \"nostr-tools\";\r\n//import { getReplyingToEvent, getThreadRoot } from \"~/utils/nostr-event\";\r\nimport useSubscribe from \"~/services/nostr/subscribe\";\r\nimport Posts from \"./user-posts-list\";\r\nimport { getReplyingToEvent } from \"~/utils/nostr-event\";\r\nexport async function loader({ request }: LoaderArgs) {\r\n  const user = await getUser(request);\r\n\r\n  return json({ user });\r\n}\r\n\r\nexport default function UserPosts({\r\n  suggestedFollows,\r\n}: {\r\n  suggestedFollows: string[];\r\n}) {\r\n  const { state }: any = useLocation();\r\n  let pubkey = state ? state?.othersPubkey : \"\";\r\n  const { user } = useLoaderData();\r\n\r\n  const displayPubkey = pubkey ? pubkey : user?.pubkey;\r\n  const myPubkey = displayPubkey;\r\n  const filterOptions = [\r\n    {\r\n      name: \"My Posts\",\r\n      filter: {\r\n        kinds: [1],\r\n        limit: 3000,\r\n      },\r\n      filterFn: (event: Event, myPubkey: string) => {\r\n        // Check if the event's public key matches the provided pubkey (myPubkey)\r\n        return event.pubkey === myPubkey && !getReplyingToEvent(event);\r\n      },\r\n    },\r\n    {\r\n      name: \"All Posts\",\r\n      filter: {\r\n        kinds: [1],\r\n        limit: 1000,\r\n      },\r\n      filterFn: undefined, // Remove the filter function\r\n    },\r\n  ];\r\n\r\n  // Assuming you have the user's pubkey stored somewhere (replace 'userPubkey' with the actual pubkey)\r\n\r\n  const filter = filterOptions[0]; // Use the first filter option for \"My Posts\"\r\n  const { events: followingPosts, eose } = useSubscribe({\r\n    filters: [filter.filter],\r\n    relays: [\r\n      \"wss://relay.gems.xyz\",\r\n      \"wss://relay.damus.io\",\r\n      \"wss://relay.snort.social\",\r\n    ],\r\n    options: { cacheRefresh: true, force: true, closeAfterEose: false },\r\n  });\r\n\r\n  const posts = React.useMemo(() => {\r\n    const filtered = followingPosts\r\n      .filter((event) => {\r\n        if (filter.filterFn) {\r\n          return filter.filterFn(event, myPubkey); // Pass the pubkey to the filter function\r\n        }\r\n        return true;\r\n      })\r\n      .sort((a, b) => b.created_at - a.created_at); // Fixed sorting function (b was missing)\r\n\r\n    return filtered;\r\n  }, [followingPosts, filter, myPubkey]); // Include the pubkey in the dependencies\r\n\r\n  return (\r\n    <div className=\"px-1 py-4\">\r\n      <Tabs defaultSelectedTab=\"tab1\">\r\n        <TabList>\r\n          <div className=\"flex items-center justify-center  px-2 py-1 text-center\">\r\n            <Tab tab=\"tab1\">Posts</Tab>\r\n            <Tab tab=\"tab2\">Replies</Tab>\r\n            <Tab tab=\"tab3\">Favorites</Tab>\r\n            <Tab tab=\"tab4\">Relays</Tab>\r\n          </div>\r\n        </TabList>\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"mt-1 h-[1px] w-[680px] bg-c-shadegray\"></div>\r\n        </div>\r\n        <TabPanel tab=\"tab1\">\r\n          {!posts || posts.length === 0 || !eose ? (\r\n            <FeedLoader />\r\n          ) : (\r\n            <div className=\" overflow-y-auto py-3 transition duration-500 scrollbar-hide\">\r\n              <Posts events={posts} />\r\n            </div>\r\n          )}\r\n        </TabPanel>\r\n        {/* <TabPanel tab=\"tab2\">\r\n          {replyEvents.length === 0 ? (\r\n            <FeedLoader />\r\n          ) : (\r\n            <div className=\"  overflow-y-auto py-3 transition duration-500 scrollbar-hide\">\r\n              {replyEvents.map((event) => (\r\n                <>\r\n                  <div className=\"px-4\">\r\n                    <Post\r\n                      key={event.id}\r\n                      createdAt={event.createdAt}\r\n                      user={{\r\n                        pubkey: event.author,\r\n                        name: mask(event.author),\r\n                        image: avatar(event.author!),\r\n                      }}\r\n                      keyId={event.eventId}\r\n                      content={event.content}\r\n                      tags={event.tags}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mt-3 h-[1px] w-full bg-c-shadegray \"></div>\r\n                </>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </TabPanel>\r\n        <TabPanel tab=\"tab3\">\r\n          {!favorites || favorites.length === 0 ? (\r\n            <FeedLoader />\r\n          ) : (\r\n            <div className=\" overflow-y-auto py-3 transition duration-500 scrollbar-hide\">\r\n              {favorites.map((event) => (\r\n                <div key={event.id}>\r\n                  <Post\r\n                    key={event.id}\r\n                    createdAt={event.createdAt}\r\n                    user={{\r\n                      pubkey: event.author,\r\n                      name: mask(event.author),\r\n                      image: avatar(event.author!),\r\n                    }}\r\n                    keyId={event.eventId}\r\n                    content={event.content}\r\n                    tags={event.tags}\r\n                    showParent={false}\r\n                    liked={true}\r\n                  />\r\n                  <div className=\"mt-3 h-[1px] w-full bg-c-shadegray \"></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </TabPanel>\r\n        <TabPanel tab=\"tab4\">\r\n          <div className=\" overflow-y-auto py-3 transition duration-500 scrollbar-hide\">\r\n            <Relays relays={relayss!} />\r\n          </div>\r\n        </TabPanel> */}\r\n      </Tabs>\r\n      {/* {quote && (\r\n        <Quote\r\n          close={() => setQuote(false)}\r\n          content={selectedEvent!.content}\r\n          pubkey={pubkey}\r\n        />\r\n      )}\r\n      {sendto && <SendinChat close={() => setSendto(false)} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst TabsContext = React.createContext<{\r\n  selectedTab: string | null;\r\n  selectTab: (tab: string) => void;\r\n}>({\r\n  selectedTab: null,\r\n  selectTab: (tab: string) => {\r\n    throw new Error(\"should not be used without TabContext.Provider\");\r\n  },\r\n});\r\n\r\nfunction Tabs({\r\n  children,\r\n  defaultSelectedTab,\r\n}: {\r\n  children: React.ReactNode;\r\n  defaultSelectedTab: string;\r\n}) {\r\n  const [selectedTab, selectTab] = React.useState(defaultSelectedTab);\r\n\r\n  const contextValue = React.useMemo(\r\n    () => ({\r\n      selectTab,\r\n      selectedTab,\r\n    }),\r\n    [selectedTab, selectTab]\r\n  );\r\n\r\n  return (\r\n    <TabsContext.Provider value={contextValue}>\r\n      <div>{children}</div>\r\n    </TabsContext.Provider>\r\n  );\r\n}\r\n\r\nfunction TabList({ children }: { children: React.ReactNode }) {\r\n  return <div>{children}</div>;\r\n}\r\n\r\nfunction Tab({ children, tab }: { tab: string; children: React.ReactNode }) {\r\n  const { selectedTab, selectTab } = React.useContext(TabsContext);\r\n\r\n  return (\r\n    <button\r\n      className={\r\n        selectedTab === tab\r\n          ? \"flex border-b-2 border-c-cyan px-10 py-3 font-Roboto font-bold text-c-cyan hover:bg-gray-900\"\r\n          : \"flex justify-center px-10 py-3 font-Roboto text-c-cyann hover:bg-gray-900\"\r\n      }\r\n      onClick={() => selectTab(tab)}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction TabPanel({\r\n  children,\r\n  tab,\r\n}: {\r\n  tab: string;\r\n  children: React.ReactNode;\r\n}) {\r\n  const { selectedTab } = React.useContext(TabsContext);\r\n\r\n  if (selectedTab !== tab) return null;\r\n\r\n  return <div>{children}</div>;\r\n}\r\n", "import { useLoaderData, useLocation, useNavigation } from \"@remix-run/react\";\r\nimport { copyPubkey } from \"~/utils/pubkey\";\r\nimport UserPosts from \"../feed/user-posts\";\r\nimport LoadingBar from \"react-top-loading-bar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useProfileContent from \"~/services/nostr/profiles/content\";\r\nimport { toast } from \"react-toastify\";\r\nimport UserDetailsProfile from \"./user-details-profile\";\r\nimport UserDetailsFollows from \"~/components/user-details/user-details-follows\";\r\n\r\nexport default function UserDetails() {\r\n  const { state }: any = useLocation();\r\n  let pubkey = state ? state?.othersPubkey : \"\";\r\n  const { user, params } = useLoaderData();\r\n\r\n  const displayPubkey = pubkey ? pubkey : user?.pubkey;\r\n  const { displayName, name, picture, about, banner } =\r\n    useProfileContent(displayPubkey);\r\n  const transition = useNavigation();\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const followers: any[] = [];\r\n  const followings: any[] = [];\r\n\r\n  useEffect(() => {\r\n    transition.state == \"idle\"\r\n      ? setProgress(0)\r\n      : transition.state == \"submitting\"\r\n      ? setProgress(50)\r\n      : transition.state == \"loading\"\r\n      ? setProgress(100)\r\n      : setProgress(0);\r\n  }, [transition.state]);\r\n\r\n  const handleCopyPubkey = () => {\r\n    copyPubkey(user?.pubkey);\r\n    toast.success(\"Public key copied to clipboard!\", {\r\n      position: \"bottom-right\",\r\n      autoClose: 3000, // 3 seconds\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n    });\r\n  };\r\n\r\n  const isMyProfile: boolean = user.pubkey === params.pubkey;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-5 flex\">\r\n        <div className=\"-mt-4 w-full rounded-md  bg-c-darkgray text-white\">\r\n          <div className=\"h-screen overflow-y-auto transition duration-500 scrollbar-hide\">\r\n            {transition.state === \"loading\" ||\r\n            transition.state == \"submitting\" ? (\r\n              <LoadingBar\r\n                color=\"#00AFAF\"\r\n                height={6}\r\n                progress={progress}\r\n                onLoaderFinished={() => setProgress(0)}\r\n              />\r\n            ) : null}\r\n\r\n            <UserDetailsProfile\r\n              about={about}\r\n              banner={banner}\r\n              displayName={displayName}\r\n              displayPubkey={displayPubkey}\r\n              handleCopyPubkey={handleCopyPubkey}\r\n              name={name}\r\n              picture={picture}\r\n              isMyProfile={isMyProfile}\r\n            />\r\n\r\n            <UserDetailsFollows followers={followers} followings={followings} />\r\n\r\n            <div className=\"\">\r\n              <UserPosts suggestedFollows={[]} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n", "import React from \"react\";\r\nimport banner from \"../../public/assets/images/sample/banner.png\";\r\ninterface BannerImageProps {\r\n  pubkey: string;\r\n  userData: {\r\n    banner?: string;\r\n  };\r\n  className?: string;\r\n}\r\n\r\nconst BannerImage: React.FC<BannerImageProps> = ({\r\n  pubkey,\r\n  userData,\r\n  className,\r\n}) => {\r\n  const defaultImage = banner;\r\n\r\n  const handleError = (e: React.SyntheticEvent<HTMLImageElement>) => {\r\n    const target = e.target as HTMLImageElement;\r\n    if (target.src !== defaultImage) {\r\n      target.src = defaultImage;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <img\r\n      src={userData?.banner ? userData.banner : defaultImage}\r\n      alt=\"\"\r\n      className={className}\r\n      onError={handleError}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BannerImage;\r\n", "import BannerImage from \"~/components/banner\";\r\nimport AvatarImage from \"~/components/avatar\";\r\nimport mask from \"~/utils/pubkey\";\r\nimport { IconCopy } from \"../../../public/assets/icons\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\ntype UserDetailsProps = {\r\n  displayPubkey: any;\r\n  banner: any;\r\n  picture: any;\r\n  displayName: any;\r\n  handleCopyPubkey: any;\r\n  name: any;\r\n  about: any;\r\n  isMyProfile: boolean;\r\n};\r\n\r\nexport default function UserDetails({\r\n  displayPubkey,\r\n  banner,\r\n  picture,\r\n  displayName,\r\n  handleCopyPubkey,\r\n  name,\r\n  about,\r\n  isMyProfile,\r\n}: UserDetailsProps): JSX.Element {\r\n  return (\r\n    <div>\r\n      <div className=\"mt-[3px] py-1\">\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"  flex h-[165px] w-full justify-center border-gray-500\">\r\n            <BannerImage\r\n              pubkey={displayPubkey}\r\n              userData={{ banner: banner }}\r\n              className=\"h-[165px] w-full\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" flex items-center justify-between\">\r\n          <div className=\"flex\">\r\n            <div className=\"-mt-14 flex px-4 \">\r\n              <AvatarImage\r\n                pubkey={displayPubkey}\r\n                userData={{ picture: picture }}\r\n                className=\"h-[120px] w-[120px] rounded-md border border-c-gray\"\r\n              />\r\n            </div>\r\n            <div className=\"mt-3\">\r\n              <label className=\"mt-16 font-Roboto text-xl font-black text-c-white\">\r\n                {displayName ?? mask(displayPubkey)}\r\n              </label>\r\n              <div className=\"flex items-center text-c-lightgray \">\r\n                {displayPubkey ? (\r\n                  <button\r\n                    className=\"flex items-center\"\r\n                    onClick={handleCopyPubkey}\r\n                  >\r\n                    <div className=\"text-c-cyan\">\r\n                      <IconCopy />\r\n                    </div>\r\n\r\n                    <span className=\" ml-2 mr-3\"> {mask(displayPubkey)} </span>\r\n                  </button>\r\n                ) : null}\r\n                <span className=\"\">@{name ?? mask(displayPubkey)}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {!isMyProfile ? (\r\n            <div className=\"mr-4\">\r\n              <Link to=\"/settings/profile/edit\">\r\n                <button className=\"rounded-sm bg-c-cyan px-3 py-2 font-Roboto hover:bg-cyan-900\">\r\n                  Edit Profile\r\n                </button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-4 h-[60px] overflow-y-auto px-4 transition duration-500 scrollbar-hide\">\r\n        <h1 className=\"text-Roboto text-sm text-c-white\">{about}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\n\r\ntype UserDetailsProps = {\r\n  followers: any[];\r\n  followings: any[];\r\n};\r\n\r\nexport default function UserDetailsFollows({\r\n  followers,\r\n  followings,\r\n}: UserDetailsProps): JSX.Element {\r\n  return (\r\n    <div className=\"mt-3 flex px-4 \">\r\n      <div className=\"flex cursor-pointer\">\r\n        <Link to=\"./followers\">\r\n          <h1 className=\"font-regular flex w-1/4 font-Roboto text-sm text-c-lightgray\">\r\n            Followers\r\n            <span className=\"ml-4 font-bold text-c-cyan\">\r\n              {followers?.length}\r\n            </span>\r\n          </h1>\r\n        </Link>\r\n      </div>\r\n      <div className=\"ml-5 flex cursor-pointer\">\r\n        <Link to=\"./following\">\r\n          <h2 className=\"font-regular flex w-3/4 font-Roboto text-sm text-c-lightgray\">\r\n            Following{\" \"}\r\n            <span className=\" ml-4 font-bold text-c-cyan\">\r\n              {followings?.length}\r\n            </span>\r\n          </h2>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": ["import_node", "import_session", "myPubkey", "Tabs", "import_react", "import_jsx_dev_runtime", "banner_default", "import_jsx_dev_runtime", "banner_default", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "UserDetails", "import_jsx_dev_runtime", "UserDetails"]
}
