{
  "version": 3,
  "sources": ["../../../app/components/common/tab.tsx", "../../../app/utils/nostr-event.ts"],
  "sourcesContent": ["import { Link } from \"@remix-run/react\";\r\nimport React, { useState, useMemo } from \"react\";\r\n\r\nconst TabsContext = React.createContext<{\r\n  selectedTab: string | null;\r\n  selectTab: (tab: string) => void;\r\n}>({\r\n  selectedTab: null,\r\n  selectTab: (tab: string) => {\r\n    throw new Error(\"should not be used without TabContext.Provider\");\r\n  },\r\n});\r\n\r\nexport function Tabs({\r\n  children,\r\n  defaultSelectedTab,\r\n}: {\r\n  children: React.ReactNode;\r\n  defaultSelectedTab: string;\r\n}) {\r\n  const [selectedTab, selectTab] = useState(defaultSelectedTab);\r\n  const contextValue = useMemo(\r\n    () => ({\r\n      selectTab,\r\n      selectedTab,\r\n    }),\r\n    [selectedTab, selectTab]\r\n  );\r\n\r\n  return (\r\n    <TabsContext.Provider value={contextValue}>\r\n      <div>{children}</div>\r\n    </TabsContext.Provider>\r\n  );\r\n}\r\n\r\nexport function TabList({ children }: { children: React.ReactNode }) {\r\n  return <div>{children}</div>;\r\n}\r\n\r\nexport function Tab({\r\n  children,\r\n  tab,\r\n  link,\r\n}: {\r\n  tab: string;\r\n  children: React.ReactNode;\r\n  link?: string;\r\n}) {\r\n  const { selectedTab, selectTab } = React.useContext(TabsContext);\r\n\r\n  if (link) {\r\n    return (\r\n      <Link to={link}>\r\n        <button\r\n          className={\r\n            selectedTab === tab\r\n              ? \"flex border-b border-c-cyan px-3 font-Roboto font-bold text-c-cyan\"\r\n              : \"flex justify-center px-3 font-Roboto text-c-cyann\"\r\n          }\r\n          onClick={() => selectTab(tab)}\r\n        >\r\n          {children}\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={\r\n        selectedTab === tab\r\n          ? \"flex border-b border-c-cyan px-3 font-Roboto font-bold text-c-cyan\"\r\n          : \"flex justify-center px-3 font-Roboto text-c-cyann\"\r\n      }\r\n      onClick={() => selectTab(tab)}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function TabPanel({\r\n  children,\r\n  tab,\r\n}: {\r\n  tab: string;\r\n  children?: React.ReactNode;\r\n}) {\r\n  const { selectedTab } = React.useContext(TabsContext);\r\n\r\n  if (selectedTab !== tab) return null;\r\n\r\n  return <div>{children}</div>;\r\n}\r\n", "import type { Event } from \"nostr-tools\";\r\n\r\nexport function getThreadRoot(event: Event): string | undefined {\r\n  const rootEvent = event?.tags?.find(\r\n    (t) => t[0] === \"e\" && t[3] === \"root\"\r\n  )?.[1];\r\n  if (rootEvent) {\r\n    return rootEvent;\r\n  }\r\n\r\n  return event?.tags?.find((t) => t[0] === \"e\")?.[1];\r\n}\r\n\r\nexport function getReplyingToEvent(\r\n  event: Event | undefined\r\n): string | undefined {\r\n  if (!event) {\r\n    return undefined;\r\n  }\r\n  const replyTags = event.tags?.filter(\r\n    (tag) => tag[0] === \"e\" && tag[3] !== \"mention\"\r\n  );\r\n  if (replyTags.length === 1) {\r\n    return replyTags[0][1];\r\n  }\r\n  const replyTag = event.tags?.find(\r\n    (tag) => tag[0] === \"e\" && tag[3] === \"reply\"\r\n  );\r\n  if (replyTag) {\r\n    return replyTag[1];\r\n  }\r\n  if (replyTags.length > 1) {\r\n    return replyTags[1][1];\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function isRepost(event: Event): boolean {\r\n  if (event.kind === 6) {\r\n    return true;\r\n  }\r\n  const mentionIndex = event.tags?.findIndex(\r\n    (tag) => tag[0] === \"e\" && tag[3] === \"mention\"\r\n  );\r\n  if (event.kind === 1 && event.content === `#[${mentionIndex}]`) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;AACA,IAAAA,gBAAyC;AA8BnC;AA5BN,IAAM,cAAc,cAAAC,QAAM,cAGvB;AAAA,EACD,aAAa;AAAA,EACb,WAAW,CAAC,QAAgB;AAC1B,UAAM,IAAI,MAAM,gDAAgD;AAAA,EAClE;AACF,CAAC;AAEM,SAAS,KAAK;AAAA,EACnB;AAAA,EACA;AACF,GAGG;AACD,QAAM,CAAC,aAAa,SAAS,QAAI,wBAAS,kBAAkB;AAC5D,QAAM,mBAAe;AAAA,IACnB,OAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,IACA,CAAC,aAAa,SAAS;AAAA,EACzB;AAEA,SACE,mDAAC,YAAY,UAAZ,EAAqB,OAAO,cAC3B,6DAAC,SAAK,YAAN;AAAA;AAAA;AAAA;AAAA,SAAe,KADjB;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEO,SAAS,QAAQ,EAAE,SAAS,GAAkC;AACnE,SAAO,mDAAC,SAAK,YAAN;AAAA;AAAA;AAAA;AAAA,SAAe;AACxB;AAEO,SAAS,IAAI;AAAA,EAClB;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACD,QAAM,EAAE,aAAa,UAAU,IAAI,cAAAA,QAAM,WAAW,WAAW;AAE/D,MAAI,MAAM;AACR,WACE,mDAAC,QAAK,IAAI,MACR;AAAA,MAAC;AAAA;AAAA,QACC,WACE,gBAAgB,MACZ,uEACA;AAAA,QAEN,SAAS,MAAM,UAAU,GAAG;AAAA,QAE3B;AAAA;AAAA,MARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,KAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,EAEJ;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,WACE,gBAAgB,MACZ,uEACA;AAAA,MAEN,SAAS,MAAM,UAAU,GAAG;AAAA,MAE3B;AAAA;AAAA,IARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA;AAEJ;AAEO,SAAS,SAAS;AAAA,EACvB;AAAA,EACA;AACF,GAGG;AACD,QAAM,EAAE,YAAY,IAAI,cAAAA,QAAM,WAAW,WAAW;AAEpD,MAAI,gBAAgB;AAAK,WAAO;AAEhC,SAAO,mDAAC,SAAK,YAAN;AAAA;AAAA;AAAA;AAAA,SAAe;AACxB;;;AC5FO,SAAS,cAAc,OAAkC;AAFhE;AAGE,QAAM,aAAY,0CAAO,SAAP,mBAAa;AAAA,IAC7B,CAAC,MAAM,EAAE,CAAC,MAAM,OAAO,EAAE,CAAC,MAAM;AAAA,QADhB,mBAEd;AACJ,MAAI,WAAW;AACb,WAAO;AAAA,EACT;AAEA,UAAO,0CAAO,SAAP,mBAAa,KAAK,CAAC,MAAM,EAAE,CAAC,MAAM,SAAlC,mBAAyC;AAClD;AAEO,SAAS,mBACd,OACoB;AAftB;AAgBE,MAAI,CAAC,OAAO;AACV,WAAO;AAAA,EACT;AACA,QAAM,aAAY,WAAM,SAAN,mBAAY;AAAA,IAC5B,CAAC,QAAQ,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,MAAM;AAAA;AAExC,MAAI,UAAU,WAAW,GAAG;AAC1B,WAAO,UAAU,CAAC,EAAE,CAAC;AAAA,EACvB;AACA,QAAM,YAAW,WAAM,SAAN,mBAAY;AAAA,IAC3B,CAAC,QAAQ,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,MAAM;AAAA;AAExC,MAAI,UAAU;AACZ,WAAO,SAAS,CAAC;AAAA,EACnB;AACA,MAAI,UAAU,SAAS,GAAG;AACxB,WAAO,UAAU,CAAC,EAAE,CAAC;AAAA,EACvB;AACA,SAAO;AACT;",
  "names": ["import_react", "React"]
}
